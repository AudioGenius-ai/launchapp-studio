{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "PermissionFile",
  "description": "Permission file that can define a default permission, a set of permissions or a list of inlined permissions.",
  "type": "object",
  "properties": {
    "default": {
      "description": "The default permission set for the plugin",
      "anyOf": [
        {
          "$ref": "#/definitions/DefaultPermission"
        },
        {
          "type": "null"
        }
      ]
    },
    "set": {
      "description": "A list of permissions sets defined",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PermissionSet"
      }
    },
    "permission": {
      "description": "A list of inlined permissions",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/Permission"
      }
    }
  },
  "definitions": {
    "DefaultPermission": {
      "description": "The default permission set of the plugin.\n\nWorks similarly to a permission with the \"default\" identifier.",
      "type": "object",
      "required": [
        "permissions"
      ],
      "properties": {
        "version": {
          "description": "The version of the permission.",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 1.0
        },
        "description": {
          "description": "Human-readable description of what the permission does. Tauri convention is to use `<h4>` headings in markdown content for Tauri documentation generation purposes.",
          "type": [
            "string",
            "null"
          ]
        },
        "permissions": {
          "description": "All permissions this set contains.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PermissionSet": {
      "description": "A set of direct permissions grouped together under a new name.",
      "type": "object",
      "required": [
        "description",
        "identifier",
        "permissions"
      ],
      "properties": {
        "identifier": {
          "description": "A unique identifier for the permission.",
          "type": "string"
        },
        "description": {
          "description": "Human-readable description of what the permission does.",
          "type": "string"
        },
        "permissions": {
          "description": "All permissions this set contains.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionKind"
          }
        }
      }
    },
    "Permission": {
      "description": "Descriptions of explicit privileges of commands.\n\nIt can enable commands to be accessible in the frontend of the application.\n\nIf the scope is defined it can be used to fine grain control the access of individual or multiple commands.",
      "type": "object",
      "required": [
        "identifier"
      ],
      "properties": {
        "version": {
          "description": "The version of the permission.",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 1.0
        },
        "identifier": {
          "description": "A unique identifier for the permission.",
          "type": "string"
        },
        "description": {
          "description": "Human-readable description of what the permission does. Tauri internal convention is to use `<h4>` headings in markdown content for Tauri documentation generation purposes.",
          "type": [
            "string",
            "null"
          ]
        },
        "commands": {
          "description": "Allowed or denied commands when using this permission.",
          "default": {
            "allow": [],
            "deny": []
          },
          "allOf": [
            {
              "$ref": "#/definitions/Commands"
            }
          ]
        },
        "scope": {
          "description": "Allowed or denied scoped when using this permission.",
          "allOf": [
            {
              "$ref": "#/definitions/Scopes"
            }
          ]
        },
        "platforms": {
          "description": "Target platforms this permission applies. By default all platforms are affected by this permission.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Target"
          }
        }
      }
    },
    "Commands": {
      "description": "Allowed and denied commands inside a permission.\n\nIf two commands clash inside of `allow` and `deny`, it should be denied by default.",
      "type": "object",
      "properties": {
        "allow": {
          "description": "Allowed command.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deny": {
          "description": "Denied command, which takes priority.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Scopes": {
      "description": "An argument for fine grained behavior control of Tauri commands.\n\nIt can be of any serde serializable type and is used to allow or prevent certain actions inside a Tauri command. The configured scope is passed to the command and will be enforced by the command implementation.\n\n## Example\n\n```json { \"allow\": [{ \"path\": \"$HOME/**\" }], \"deny\": [{ \"path\": \"$HOME/secret.txt\" }] } ```",
      "type": "object",
      "properties": {
        "allow": {
          "description": "Data that defines what is allowed by the scope.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Value"
          }
        },
        "deny": {
          "description": "Data that defines what is denied by the scope. This should be prioritized by validation logic.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Value"
          }
        }
      }
    },
    "Value": {
      "description": "All supported ACL values.",
      "anyOf": [
        {
          "description": "Represents a null JSON value.",
          "type": "null"
        },
        {
          "description": "Represents a [`bool`].",
          "type": "boolean"
        },
        {
          "description": "Represents a valid ACL [`Number`].",
          "allOf": [
            {
              "$ref": "#/definitions/Number"
            }
          ]
        },
        {
          "description": "Represents a [`String`].",
          "type": "string"
        },
        {
          "description": "Represents a list of other [`Value`]s.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Value"
          }
        },
        {
          "description": "Represents a map of [`String`] keys to [`Value`]s.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Value"
          }
        }
      ]
    },
    "Number": {
      "description": "A valid ACL number.",
      "anyOf": [
        {
          "description": "Represents an [`i64`].",
          "type": "integer",
          "format": "int64"
        },
        {
          "description": "Represents a [`f64`].",
          "type": "number",
          "format": "double"
        }
      ]
    },
    "Target": {
      "description": "Platform target.",
      "oneOf": [
        {
          "description": "MacOS.",
          "type": "string",
          "enum": [
            "macOS"
          ]
        },
        {
          "description": "Windows.",
          "type": "string",
          "enum": [
            "windows"
          ]
        },
        {
          "description": "Linux.",
          "type": "string",
          "enum": [
            "linux"
          ]
        },
        {
          "description": "Android.",
          "type": "string",
          "enum": [
            "android"
          ]
        },
        {
          "description": "iOS.",
          "type": "string",
          "enum": [
            "iOS"
          ]
        }
      ]
    },
    "PermissionKind": {
      "type": "string",
      "oneOf": [
        {
          "description": "Enables the git_add_remote command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-add-remote",
          "markdownDescription": "Enables the git_add_remote command without any pre-configured scope."
        },
        {
          "description": "Denies the git_add_remote command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-add-remote",
          "markdownDescription": "Denies the git_add_remote command without any pre-configured scope."
        },
        {
          "description": "Enables the git_blame command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-blame",
          "markdownDescription": "Enables the git_blame command without any pre-configured scope."
        },
        {
          "description": "Denies the git_blame command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-blame",
          "markdownDescription": "Denies the git_blame command without any pre-configured scope."
        },
        {
          "description": "Enables the git_branches command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-branches",
          "markdownDescription": "Enables the git_branches command without any pre-configured scope."
        },
        {
          "description": "Denies the git_branches command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-branches",
          "markdownDescription": "Denies the git_branches command without any pre-configured scope."
        },
        {
          "description": "Enables the git_checkout command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-checkout",
          "markdownDescription": "Enables the git_checkout command without any pre-configured scope."
        },
        {
          "description": "Denies the git_checkout command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-checkout",
          "markdownDescription": "Denies the git_checkout command without any pre-configured scope."
        },
        {
          "description": "Enables the git_cherry_pick command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-cherry-pick",
          "markdownDescription": "Enables the git_cherry_pick command without any pre-configured scope."
        },
        {
          "description": "Denies the git_cherry_pick command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-cherry-pick",
          "markdownDescription": "Denies the git_cherry_pick command without any pre-configured scope."
        },
        {
          "description": "Enables the git_clone command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-clone",
          "markdownDescription": "Enables the git_clone command without any pre-configured scope."
        },
        {
          "description": "Denies the git_clone command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-clone",
          "markdownDescription": "Denies the git_clone command without any pre-configured scope."
        },
        {
          "description": "Enables the git_commit command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-commit",
          "markdownDescription": "Enables the git_commit command without any pre-configured scope."
        },
        {
          "description": "Denies the git_commit command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-commit",
          "markdownDescription": "Denies the git_commit command without any pre-configured scope."
        },
        {
          "description": "Enables the git_config_get command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-config-get",
          "markdownDescription": "Enables the git_config_get command without any pre-configured scope."
        },
        {
          "description": "Denies the git_config_get command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-config-get",
          "markdownDescription": "Denies the git_config_get command without any pre-configured scope."
        },
        {
          "description": "Enables the git_config_set command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-config-set",
          "markdownDescription": "Enables the git_config_set command without any pre-configured scope."
        },
        {
          "description": "Denies the git_config_set command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-config-set",
          "markdownDescription": "Denies the git_config_set command without any pre-configured scope."
        },
        {
          "description": "Enables the git_create_branch command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-create-branch",
          "markdownDescription": "Enables the git_create_branch command without any pre-configured scope."
        },
        {
          "description": "Denies the git_create_branch command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-create-branch",
          "markdownDescription": "Denies the git_create_branch command without any pre-configured scope."
        },
        {
          "description": "Enables the git_create_tag command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-create-tag",
          "markdownDescription": "Enables the git_create_tag command without any pre-configured scope."
        },
        {
          "description": "Denies the git_create_tag command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-create-tag",
          "markdownDescription": "Denies the git_create_tag command without any pre-configured scope."
        },
        {
          "description": "Enables the git_delete_branch command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-delete-branch",
          "markdownDescription": "Enables the git_delete_branch command without any pre-configured scope."
        },
        {
          "description": "Denies the git_delete_branch command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-delete-branch",
          "markdownDescription": "Denies the git_delete_branch command without any pre-configured scope."
        },
        {
          "description": "Enables the git_delete_tag command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-delete-tag",
          "markdownDescription": "Enables the git_delete_tag command without any pre-configured scope."
        },
        {
          "description": "Denies the git_delete_tag command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-delete-tag",
          "markdownDescription": "Denies the git_delete_tag command without any pre-configured scope."
        },
        {
          "description": "Enables the git_diff command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-diff",
          "markdownDescription": "Enables the git_diff command without any pre-configured scope."
        },
        {
          "description": "Denies the git_diff command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-diff",
          "markdownDescription": "Denies the git_diff command without any pre-configured scope."
        },
        {
          "description": "Enables the git_diff_file command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-diff-file",
          "markdownDescription": "Enables the git_diff_file command without any pre-configured scope."
        },
        {
          "description": "Denies the git_diff_file command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-diff-file",
          "markdownDescription": "Denies the git_diff_file command without any pre-configured scope."
        },
        {
          "description": "Enables the git_fetch command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-fetch",
          "markdownDescription": "Enables the git_fetch command without any pre-configured scope."
        },
        {
          "description": "Denies the git_fetch command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-fetch",
          "markdownDescription": "Denies the git_fetch command without any pre-configured scope."
        },
        {
          "description": "Enables the git_init command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-init",
          "markdownDescription": "Enables the git_init command without any pre-configured scope."
        },
        {
          "description": "Denies the git_init command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-init",
          "markdownDescription": "Denies the git_init command without any pre-configured scope."
        },
        {
          "description": "Enables the git_log command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-log",
          "markdownDescription": "Enables the git_log command without any pre-configured scope."
        },
        {
          "description": "Denies the git_log command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-log",
          "markdownDescription": "Denies the git_log command without any pre-configured scope."
        },
        {
          "description": "Enables the git_merge command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-merge",
          "markdownDescription": "Enables the git_merge command without any pre-configured scope."
        },
        {
          "description": "Denies the git_merge command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-merge",
          "markdownDescription": "Denies the git_merge command without any pre-configured scope."
        },
        {
          "description": "Enables the git_pull command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-pull",
          "markdownDescription": "Enables the git_pull command without any pre-configured scope."
        },
        {
          "description": "Denies the git_pull command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-pull",
          "markdownDescription": "Denies the git_pull command without any pre-configured scope."
        },
        {
          "description": "Enables the git_push command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-push",
          "markdownDescription": "Enables the git_push command without any pre-configured scope."
        },
        {
          "description": "Denies the git_push command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-push",
          "markdownDescription": "Denies the git_push command without any pre-configured scope."
        },
        {
          "description": "Enables the git_remotes command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-remotes",
          "markdownDescription": "Enables the git_remotes command without any pre-configured scope."
        },
        {
          "description": "Denies the git_remotes command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-remotes",
          "markdownDescription": "Denies the git_remotes command without any pre-configured scope."
        },
        {
          "description": "Enables the git_remove_remote command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-remove-remote",
          "markdownDescription": "Enables the git_remove_remote command without any pre-configured scope."
        },
        {
          "description": "Denies the git_remove_remote command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-remove-remote",
          "markdownDescription": "Denies the git_remove_remote command without any pre-configured scope."
        },
        {
          "description": "Enables the git_reset command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-reset",
          "markdownDescription": "Enables the git_reset command without any pre-configured scope."
        },
        {
          "description": "Denies the git_reset command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-reset",
          "markdownDescription": "Denies the git_reset command without any pre-configured scope."
        },
        {
          "description": "Enables the git_revert command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-revert",
          "markdownDescription": "Enables the git_revert command without any pre-configured scope."
        },
        {
          "description": "Denies the git_revert command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-revert",
          "markdownDescription": "Denies the git_revert command without any pre-configured scope."
        },
        {
          "description": "Enables the git_show_commit command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-show-commit",
          "markdownDescription": "Enables the git_show_commit command without any pre-configured scope."
        },
        {
          "description": "Denies the git_show_commit command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-show-commit",
          "markdownDescription": "Denies the git_show_commit command without any pre-configured scope."
        },
        {
          "description": "Enables the git_stage command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-stage",
          "markdownDescription": "Enables the git_stage command without any pre-configured scope."
        },
        {
          "description": "Denies the git_stage command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-stage",
          "markdownDescription": "Denies the git_stage command without any pre-configured scope."
        },
        {
          "description": "Enables the git_stage_all command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-stage-all",
          "markdownDescription": "Enables the git_stage_all command without any pre-configured scope."
        },
        {
          "description": "Denies the git_stage_all command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-stage-all",
          "markdownDescription": "Denies the git_stage_all command without any pre-configured scope."
        },
        {
          "description": "Enables the git_stash command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-stash",
          "markdownDescription": "Enables the git_stash command without any pre-configured scope."
        },
        {
          "description": "Denies the git_stash command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-stash",
          "markdownDescription": "Denies the git_stash command without any pre-configured scope."
        },
        {
          "description": "Enables the git_stash_apply command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-stash-apply",
          "markdownDescription": "Enables the git_stash_apply command without any pre-configured scope."
        },
        {
          "description": "Denies the git_stash_apply command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-stash-apply",
          "markdownDescription": "Denies the git_stash_apply command without any pre-configured scope."
        },
        {
          "description": "Enables the git_stash_drop command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-stash-drop",
          "markdownDescription": "Enables the git_stash_drop command without any pre-configured scope."
        },
        {
          "description": "Denies the git_stash_drop command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-stash-drop",
          "markdownDescription": "Denies the git_stash_drop command without any pre-configured scope."
        },
        {
          "description": "Enables the git_stash_list command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-stash-list",
          "markdownDescription": "Enables the git_stash_list command without any pre-configured scope."
        },
        {
          "description": "Denies the git_stash_list command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-stash-list",
          "markdownDescription": "Denies the git_stash_list command without any pre-configured scope."
        },
        {
          "description": "Enables the git_stash_pop command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-stash-pop",
          "markdownDescription": "Enables the git_stash_pop command without any pre-configured scope."
        },
        {
          "description": "Denies the git_stash_pop command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-stash-pop",
          "markdownDescription": "Denies the git_stash_pop command without any pre-configured scope."
        },
        {
          "description": "Enables the git_status command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-status",
          "markdownDescription": "Enables the git_status command without any pre-configured scope."
        },
        {
          "description": "Denies the git_status command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-status",
          "markdownDescription": "Denies the git_status command without any pre-configured scope."
        },
        {
          "description": "Enables the git_tags command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-tags",
          "markdownDescription": "Enables the git_tags command without any pre-configured scope."
        },
        {
          "description": "Denies the git_tags command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-tags",
          "markdownDescription": "Denies the git_tags command without any pre-configured scope."
        },
        {
          "description": "Enables the git_unstage command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-unstage",
          "markdownDescription": "Enables the git_unstage command without any pre-configured scope."
        },
        {
          "description": "Denies the git_unstage command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-unstage",
          "markdownDescription": "Denies the git_unstage command without any pre-configured scope."
        },
        {
          "description": "Enables the git_unstage_all command without any pre-configured scope.",
          "type": "string",
          "const": "allow-git-unstage-all",
          "markdownDescription": "Enables the git_unstage_all command without any pre-configured scope."
        },
        {
          "description": "Denies the git_unstage_all command without any pre-configured scope.",
          "type": "string",
          "const": "deny-git-unstage-all",
          "markdownDescription": "Denies the git_unstage_all command without any pre-configured scope."
        },
        {
          "description": "Default permissions for git plugin\n#### This default permission set includes:\n\n- `allow-git-status`\n- `allow-git-log`\n- `allow-git-commit`\n- `allow-git-stage`\n- `allow-git-unstage`\n- `allow-git-stage-all`\n- `allow-git-unstage-all`\n- `allow-git-diff`\n- `allow-git-diff-file`\n- `allow-git-branches`\n- `allow-git-create-branch`\n- `allow-git-checkout`\n- `allow-git-delete-branch`\n- `allow-git-merge`\n- `allow-git-fetch`\n- `allow-git-pull`\n- `allow-git-push`\n- `allow-git-remotes`\n- `allow-git-add-remote`\n- `allow-git-remove-remote`\n- `allow-git-stash`\n- `allow-git-stash-list`\n- `allow-git-stash-apply`\n- `allow-git-stash-pop`\n- `allow-git-stash-drop`\n- `allow-git-reset`\n- `allow-git-revert`\n- `allow-git-cherry-pick`\n- `allow-git-tags`\n- `allow-git-create-tag`\n- `allow-git-delete-tag`\n- `allow-git-clone`\n- `allow-git-init`\n- `allow-git-config-get`\n- `allow-git-config-set`\n- `allow-git-blame`\n- `allow-git-show-commit`",
          "type": "string",
          "const": "default",
          "markdownDescription": "Default permissions for git plugin\n#### This default permission set includes:\n\n- `allow-git-status`\n- `allow-git-log`\n- `allow-git-commit`\n- `allow-git-stage`\n- `allow-git-unstage`\n- `allow-git-stage-all`\n- `allow-git-unstage-all`\n- `allow-git-diff`\n- `allow-git-diff-file`\n- `allow-git-branches`\n- `allow-git-create-branch`\n- `allow-git-checkout`\n- `allow-git-delete-branch`\n- `allow-git-merge`\n- `allow-git-fetch`\n- `allow-git-pull`\n- `allow-git-push`\n- `allow-git-remotes`\n- `allow-git-add-remote`\n- `allow-git-remove-remote`\n- `allow-git-stash`\n- `allow-git-stash-list`\n- `allow-git-stash-apply`\n- `allow-git-stash-pop`\n- `allow-git-stash-drop`\n- `allow-git-reset`\n- `allow-git-revert`\n- `allow-git-cherry-pick`\n- `allow-git-tags`\n- `allow-git-create-tag`\n- `allow-git-delete-tag`\n- `allow-git-clone`\n- `allow-git-init`\n- `allow-git-config-get`\n- `allow-git-config-set`\n- `allow-git-blame`\n- `allow-git-show-commit`"
        }
      ]
    }
  }
}